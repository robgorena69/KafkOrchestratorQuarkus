# configure your datasource
quarkus.datasource.username = ${USUARIO_DB_ITEMS}
quarkus.datasource.password = ${PASSWORD_DB_ITEMS}
quarkus.datasource.jdbc.url = ${URL_DB_ITEMS}
quarkus.datasource.db-kind = postgresql
# drop and create the database at startup (use `update` to only update the schema)  drop-and-create
quarkus.hibernate-orm.database.generation=none
#Secreto bbdd
quarkus.kubernetes.env.mapping.url-db-items.with-key=dburl

# Log Console
quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n

# Open Tracing
quarkus.jaeger.agent-host-port=${JAEGER_HOST_PORT}
quarkus.jaeger.service-name=msa-items
quarkus.jaeger.sampler-type=const
quarkus.jaeger.sampler-param=1

# Configuracion GELF
quarkus.log.handler.gelf.enabled=true
quarkus.log.handler.gelf.level=WARN
quarkus.log.handler.gelf.include-full-mdc=true
quarkus.log.handler.gelf.extract-stack-trace=true
quarkus.log.handler.gelf.stack-trace-throwable-reference=-1
quarkus.log.handler.gelf.additional-field."microservice".value=msa-items
quarkus.log.handler.gelf.additional-field."microservice".type=string

quarkus.log.handler.gelf.host=${GELF_HOST}

quarkus.jib.base-jvm-image = nexusdesarrollo.ruat.gob.bo:5000/imagenbase/alpine-openjdk11-base:1.0.0

quarkus.kubernetes.name=msa-items
quarkus.kubernetes.labels.app=msa-items

quarkus.http.port=9030

#KAFKA
kafka.bootstrap.servers=localhost:9092

#TOPICS de recepcion

#TOPIC de recepcion crear orden
mp.messaging.incoming.solicita-preparar-items.crea-orden.connector=smallrye-kafka
mp.messaging.incoming.solicita-preparar-items.topic=solicita-preparar-items
mp.messaging.incoming.solicita-preparar-items.failure-strategy=dead-letter-queue

#TOPIC de recepcion cancela preparar items
mp.messaging.incoming.cancela-preparar-items.crea-orden.connector=smallrye-kafka
mp.messaging.incoming.cancela-preparar-items.topic=cancela-preparar-items
mp.messaging.incoming.cancela-preparar-items.failure-strategy=dead-letter-queue

#TOPICS de envio
mp.messaging.outgoing.confirma-operacion.bootstrap.servers=localhost:9092
mp.messaging.outgoing.confirma-operacion.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.confirma-operacion.topic=confirma-operacion
mp.messaging.outgoing.confirma-operacion.merge=true

mp.messaging.outgoing.debitar-items.bootstrap.servers=localhost:9092
mp.messaging.outgoing.debitar-items.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.debitar-items.topic=debitar-items
mp.messaging.outgoing.debitar-items.merge=true
